{"is_source_file": true, "format": "TypeScript", "description": "This file defines a NotesService for managing notes, including functions to list, get, create, update, and remove notes, with storage handled via localStorage utilities. It also exports a factory function to create an instance of this service.", "external_files": ["../types", "../utils/storage"], "external_methods": ["loadFromStorage", "saveToStorage"], "published": ["NotesService", "createNotesService"], "classes": [], "methods": [{"name": "export function createNotesService(): NotesService { createNotesService", "description": "Creates and returns a localStorage-backed implementation of the NotesService interface.", "is_async": true, "scope": "", "scopeKind": ""}, {"name": "create(_: NoteCreate): Promise<Note>; create", "scope": "NotesService", "scopeKind": "interface", "description": "unavailable"}, {"name": "function cryptoRandomId(): string { cryptoRandomId", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "get(_: string): Promise<Note | null>; get", "scope": "NotesService", "scopeKind": "interface", "description": "unavailable"}, {"name": "list(): Promise<Note[]>; list", "scope": "NotesService", "scopeKind": "interface", "description": "unavailable"}, {"name": "remove(_: string): Promise<void>; remove", "scope": "NotesService", "scopeKind": "interface", "description": "unavailable"}, {"name": "update(_: string, __: NoteUpdate): Promise<Note>; update", "scope": "NotesService", "scopeKind": "interface", "description": "unavailable"}], "calls": ["loadFromStorage", "saveToStorage", "crypto.randomUUID", "Date.now()"], "search-terms": ["NotesService", "localStorage", "createNotesService", "notes.v1", "NoteCreate", "storage"], "state": 2, "file_id": 17, "knowledge_revision": 66, "git_revision": "8fa6513e85846d7e382d5c5348f66f10ea107c22", "revision_history": [{"37": ""}, {"51": ""}, {"58": ""}, {"63": ""}, {"66": "8fa6513e85846d7e382d5c5348f66f10ea107c22"}], "ctags": [{"_type": "tag", "name": "NotesService", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^export interface NotesService {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^const STORAGE_KEY = 'notes.v1';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^  create(_: NoteCreate): Promise<Note>;$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "interface"}, {"_type": "tag", "name": "createNotesService", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^export function createNotesService(): NotesService {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "cryptoRandomId", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^function cryptoRandomId(): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "existing", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^      const existing = items[idx];$/", "language": "TypeScript", "kind": "constant", "scope": "createNotesService", "scopeKind": "function"}, {"_type": "tag", "name": "found", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^      const found = readAll().find(n => n.id === id) || null;$/", "language": "TypeScript", "kind": "constant", "scope": "createNotesService", "scopeKind": "function"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^  get(_: string): Promise<Note | null>;$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "interface"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^      const existing = items[idx];$/", "language": "TypeScript", "kind": "constant", "scope": "createNotesService", "scopeKind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^      const idx = items.findIndex(n => n.id === id);$/", "language": "TypeScript", "kind": "constant", "scope": "createNotesService", "scopeKind": "function"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^      const items = readAll().filter(n => n.id !== id);$/", "language": "TypeScript", "kind": "constant", "scope": "createNotesService", "scopeKind": "function"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^      const items = readAll();$/", "language": "TypeScript", "kind": "constant", "scope": "createNotesService", "scopeKind": "function"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^  list(): Promise<Note[]>;$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "interface"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^      const note: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "createNotesService", "scopeKind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^      const now = Date.now();$/", "language": "TypeScript", "kind": "constant", "scope": "createNotesService", "scopeKind": "function"}, {"_type": "tag", "name": "readAll", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^  const readAll = (): Note[] => loadFromStorage<Note[]>(STORAGE_KEY, []);$/", "language": "TypeScript", "kind": "constant", "scope": "createNotesService", "scopeKind": "function"}, {"_type": "tag", "name": "remove", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^  remove(_: string): Promise<void>;$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "interface"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^        title: dto.title !== undefined ? dto.title : existing.title,$/", "language": "TypeScript", "kind": "constant", "scope": "createNotesService", "scopeKind": "function"}, {"_type": "tag", "name": "update", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^  update(_: string, __: NoteUpdate): Promise<Note>;$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "interface"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^      const updated: Note = {$/", "language": "TypeScript", "kind": "constant", "scope": "createNotesService", "scopeKind": "function"}, {"_type": "tag", "name": "writeAll", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-180722-180804/notes_frontend/src/services/NotesService.ts", "pattern": "/^  const writeAll = (items: Note[]) => saveToStorage(STORAGE_KEY, items);$/", "language": "TypeScript", "kind": "constant", "scope": "createNotesService", "scopeKind": "function"}], "hash": "04095b48393fce9fd697e456d56f8833", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/services/NotesService.ts", "fields": [{"name": "export interface NotesService {", "scope": "", "scopeKind": "", "description": "unavailable"}]}